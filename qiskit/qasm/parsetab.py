
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AE12BC74038D0DDE2566AC3973B62A13'
    
_lr_action_items = {'MAGIC':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[2,-4,-101,-31,2,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),'QREG':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[1,-4,-101,-31,1,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),']':([85,],[110,]),'PI':([46,53,67,71,77,96,97,100,101,102,103,104,151,154,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'U':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,118,139,140,141,147,155,156,157,159,162,166,167,170,172,173,174,178,180,182,185,186,187,188,],[11,-4,-101,-31,11,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,137,-40,-42,137,11,-41,-43,-53,-62,-37,-56,-55,-60,-61,-38,-51,-59,-54,-50,-57,-52,-49,-58,]),'/':([12,27,68,69,72,73,74,76,78,79,95,99,126,127,128,129,130,131,148,170,],[-13,-12,-84,-85,-91,100,-82,-94,-88,-83,-90,-89,-96,-95,100,-93,-92,-86,-87,-13,]),'$end':([4,8,9,20,21,28,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[-4,-101,-31,-1,-2,0,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),'}':([118,140,141,156,157,159,166,167,170,172,174,178,180,182,185,186,187,188,],[139,-42,155,-43,-53,-62,-56,-55,-60,-61,-51,-59,-54,-50,-57,-52,-49,-58,]),'RESET':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,147,155,162,173,],[24,-4,-101,-31,24,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,24,-41,-37,-38,]),',':([12,27,41,42,43,49,50,54,68,69,70,72,73,74,75,76,78,79,82,86,87,88,90,95,99,106,107,110,111,113,114,115,119,124,126,127,128,129,130,131,132,133,136,145,148,149,150,152,153,157,158,159,160,161,164,168,170,176,178,179,184,],[-13,-12,-18,-17,65,80,-25,80,-84,-85,97,-91,-97,-82,-99,-94,-88,-83,97,-16,-23,112,112,-90,-89,-26,80,-14,-15,134,-13,-21,134,-100,-96,-95,-98,-93,-92,-86,80,-24,112,112,-87,-22,112,165,-19,-13,171,-13,165,112,97,97,-13,-20,-13,165,165,]),'-':([12,27,46,53,67,68,69,71,72,74,76,77,78,79,95,96,97,99,100,101,102,103,104,126,127,129,130,131,148,151,154,170,],[-13,-12,67,67,67,-84,-85,67,-91,-82,103,67,-88,-83,-90,67,67,-89,67,67,67,67,67,103,103,-93,-92,-86,-87,67,67,-13,]),'OPAQUE':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,147,155,162,173,],[5,-4,-101,-31,5,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,5,-41,-37,-38,]),'GATE':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[6,-4,-101,-31,6,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),'CX':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,118,139,140,141,147,155,156,157,159,162,166,167,170,172,173,174,178,180,182,185,186,187,188,],[7,-4,-101,-31,7,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,142,-40,-42,142,7,-41,-43,-53,-62,-37,-56,-55,-60,-61,-38,-51,-59,-54,-50,-57,-52,-49,-58,]),'*':([12,27,68,69,72,73,74,76,78,79,95,99,126,127,128,129,130,131,148,170,],[-13,-12,-84,-85,-91,101,-82,-94,-88,-83,-90,-89,-96,-95,101,-93,-92,-86,-87,-13,]),';':([3,12,13,15,16,19,22,23,25,26,27,31,32,34,35,36,41,42,44,49,50,54,55,56,60,84,86,87,88,92,93,106,107,109,110,111,114,122,125,132,133,136,146,150,152,153,159,160,163,176,178,179,180,181,182,183,184,],[38,-13,47,52,-78,-80,58,-81,-77,-76,-12,-79,-32,-33,-10,-11,-18,-17,-75,-69,-25,-46,-34,-35,-70,-68,-16,-23,-63,-45,-72,-26,-47,-67,-14,-15,-66,-73,-44,-48,-24,-64,-74,-65,167,-19,-13,172,-71,-20,-13,185,-13,186,-13,187,188,]),'STRING':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[8,-4,-101,-31,8,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),'{':([12,27,87,90,133,145,161,],[-13,-12,-23,118,-24,118,118,]),'NNINTEGER':([46,53,62,67,71,77,94,96,97,100,101,102,103,104,151,154,],[74,74,85,74,74,74,121,74,74,74,74,74,74,74,74,74,]),'+':([12,27,46,53,67,68,69,71,72,74,76,77,78,79,95,96,97,99,100,101,102,103,104,126,127,129,130,131,148,151,154,170,],[-13,-12,71,71,71,-84,-85,71,-91,-82,104,71,-88,-83,-90,71,71,-89,71,71,71,71,71,104,104,-93,-92,-86,-87,71,71,-13,]),'ID':([0,1,4,5,6,7,8,9,12,14,17,18,20,21,24,27,29,30,37,38,39,40,45,46,47,48,51,52,53,57,58,59,63,64,65,67,71,77,80,81,83,89,91,96,97,98,100,101,102,103,104,108,112,116,117,118,120,134,135,138,139,140,141,142,143,144,147,151,154,155,156,157,159,162,165,166,167,169,170,171,172,173,174,175,177,178,180,182,185,186,187,188,],[27,27,-4,27,27,27,-101,-31,-13,27,27,27,27,-2,27,-12,-7,27,-9,-6,-39,-39,27,27,-5,-8,-30,-28,27,-3,-27,-29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-36,27,27,27,27,27,-40,-42,27,27,27,27,27,27,27,-41,-43,-53,-62,-37,27,-56,-55,27,-60,27,-61,-38,-51,27,27,-59,-54,-50,-57,-52,-49,-58,]),'MATCHES':([12,27,66,],[-13,-12,94,]),'IF':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,147,155,162,173,],[10,-4,-101,-31,10,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,10,-41,-37,-38,]),'^':([12,27,68,69,72,73,74,75,76,78,79,95,99,105,123,124,126,127,128,129,130,131,148,170,],[-13,-12,-84,-85,-91,-97,-82,102,-94,-88,-83,-90,-89,102,102,102,-96,-95,-98,-93,-92,-86,-87,-13,]),')':([12,27,53,68,69,70,72,73,74,75,76,78,79,82,89,91,95,99,105,113,114,115,119,121,123,124,126,127,128,129,130,131,148,149,154,164,168,170,],[-13,-12,81,-84,-85,98,-91,-97,-82,-99,-94,-88,-83,108,116,120,-90,-89,131,135,-13,-21,144,147,148,-100,-96,-95,-98,-93,-92,-86,-87,-22,169,175,177,-13,]),'(':([10,11,12,17,27,39,40,46,53,63,64,67,69,71,77,96,97,100,101,102,103,104,137,138,151,154,170,],[45,46,-13,53,-12,-39,-39,77,77,89,91,77,96,77,77,77,77,77,77,77,77,77,151,154,77,77,-13,]),'ASSIGN':([12,27,41,42,61,86,110,111,],[-13,-12,-18,-17,83,-16,-14,-15,]),'error':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,114,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,146,147,148,150,151,152,153,154,155,156,157,159,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,180,182,185,186,187,188,],[12,34,36,37,-4,12,12,12,-101,-31,44,-13,48,12,51,-78,12,56,-80,12,-2,59,-81,12,-77,-76,-12,-7,12,-79,-32,-33,-10,-11,-9,-6,-39,-39,-18,-17,-75,12,12,-5,-8,-69,-25,-30,-28,12,-46,-34,-35,-3,-27,-29,-70,84,86,12,12,12,93,12,-84,-85,12,-91,-97,-82,-99,-94,12,-88,-83,12,12,12,-68,111,-16,-23,-63,114,12,-45,-72,122,-90,12,12,12,-89,12,12,12,12,12,-26,-47,12,-67,-14,-15,12,-66,12,-36,12,12,146,-73,-100,-44,-96,-95,-98,-93,-92,-86,-48,-24,12,12,-64,12,-40,-42,12,157,159,12,-74,12,-87,-65,12,166,-19,170,-41,-43,-53,-62,-37,-71,174,12,-56,-55,178,-60,180,-61,-38,-51,182,-20,12,-59,-54,-50,-57,-52,-49,-58,]),'BARRIER':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,118,139,140,141,147,155,156,157,159,162,166,167,170,172,173,174,178,180,182,185,186,187,188,],[14,-4,-101,-31,14,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,143,-40,-42,143,14,-41,-43,-53,-62,-37,-56,-55,-60,-61,-38,-51,-59,-54,-50,-57,-52,-49,-58,]),'MEASURE':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,147,155,162,173,],[30,-4,-101,-31,30,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,30,-41,-37,-38,]),'[':([12,27,33,34,42,56,],[-13,-12,62,-13,62,-13,]),'REAL':([2,46,53,67,71,77,96,97,100,101,102,103,104,151,154,],[35,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'CREG':([0,4,8,9,20,21,29,37,38,47,48,51,52,57,58,59,117,139,155,162,173,],[18,-4,-101,-31,18,-2,-7,-9,-6,-5,-8,-30,-28,-3,-27,-29,-36,-40,-41,-37,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'reset':([0,20,147,],[19,19,19,]),'gate_id_list':([89,91,],[113,119,]),'program':([0,],[20,]),'statement':([0,20,],[21,57,]),'exp_list':([46,53,151,154,],[70,82,164,168,]),'qreg_decl':([0,20,],[22,22,]),'magic':([0,20,],[3,3,]),'decl':([0,20,],[4,4,]),'bit_list':([63,64,116,120,135,144,],[88,90,136,145,150,161,]),'gate_scope':([39,40,],[63,64,]),'opaque':([0,20,147,],[25,25,25,]),'unitary_op':([0,20,147,],[26,26,26,]),'primary_list':([14,17,81,108,],[49,54,107,132,]),'multiplicative_expression':([46,53,77,96,97,102,151,154,],[73,73,73,73,73,128,73,73,]),'expression':([46,53,77,96,97,151,154,],[75,75,105,123,124,75,75,]),'main':([0,],[28,]),'additive_expression':([46,53,77,96,97,100,101,102,151,154,],[76,76,76,76,76,126,127,76,76,76,]),'id_list':([138,143,169,177,],[152,160,179,184,]),'indexed_id':([1,7,14,17,18,24,30,65,80,81,83,98,108,],[32,41,41,41,55,41,41,41,41,41,41,41,41,]),'gate_body':([90,145,161,],[117,162,173,]),'quantum_op':([0,20,147,],[13,13,163,]),'primary':([7,14,17,24,30,65,80,81,83,98,108,],[43,50,50,60,61,92,106,50,109,125,50,]),'gate_decl':([0,20,],[9,9,]),'prefix_expression':([46,53,67,71,77,96,97,100,101,102,103,104,151,154,],[72,72,95,99,72,72,72,72,72,72,129,130,72,72,]),'creg_decl':([0,20,],[15,15,]),'if':([0,20,147,],[23,23,23,]),'gate_op':([118,141,],[140,156,]),'unary':([46,53,67,71,77,96,97,100,101,102,103,104,151,154,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'ignore':([0,20,],[29,29,]),'barrier':([0,20,147,],[31,31,31,]),'measure':([0,20,147,],[16,16,16,]),'id':([0,1,5,6,7,14,17,18,20,24,30,45,46,53,63,64,65,67,71,77,80,81,83,89,91,96,97,98,100,101,102,103,104,108,112,116,118,120,134,135,138,141,142,143,144,147,151,154,165,169,171,175,177,],[17,33,39,40,42,42,42,33,17,42,42,66,69,69,87,87,42,69,69,69,42,42,42,115,115,69,69,42,69,69,69,69,69,42,133,87,138,87,149,87,153,138,158,153,87,17,69,69,176,153,181,183,153,]),'gate_op_list':([118,],[141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> program','main',1,'p_main','_qasmparser.py',252),
  ('program -> statement','program',1,'p_program_0','_qasmparser.py',262),
  ('program -> program statement','program',2,'p_program_1','_qasmparser.py',268),
  ('statement -> decl','statement',1,'p_statement','_qasmparser.py',280),
  ('statement -> quantum_op ;','statement',2,'p_statement','_qasmparser.py',281),
  ('statement -> magic ;','statement',2,'p_statement','_qasmparser.py',282),
  ('statement -> ignore','statement',1,'p_statement','_qasmparser.py',283),
  ('statement -> quantum_op error','statement',2,'p_statement','_qasmparser.py',284),
  ('statement -> magic error','statement',2,'p_statement','_qasmparser.py',285),
  ('magic -> MAGIC REAL','magic',2,'p_magic','_qasmparser.py',295),
  ('magic -> MAGIC error','magic',2,'p_magic_0','_qasmparser.py',301),
  ('id -> ID','id',1,'p_id','_qasmparser.py',312),
  ('id -> error','id',1,'p_id_e','_qasmparser.py',318),
  ('indexed_id -> id [ NNINTEGER ]','indexed_id',4,'p_indexed_id','_qasmparser.py',328),
  ('indexed_id -> id [ NNINTEGER error','indexed_id',4,'p_indexed_id','_qasmparser.py',329),
  ('indexed_id -> id [ error','indexed_id',3,'p_indexed_id','_qasmparser.py',330),
  ('primary -> id','primary',1,'p_primary','_qasmparser.py',346),
  ('primary -> indexed_id','primary',1,'p_primary','_qasmparser.py',347),
  ('id_list -> id','id_list',1,'p_id_list_0','_qasmparser.py',357),
  ('id_list -> id_list , id','id_list',3,'p_id_list_1','_qasmparser.py',363),
  ('gate_id_list -> id','gate_id_list',1,'p_gate_id_list_0','_qasmparser.py',374),
  ('gate_id_list -> gate_id_list , id','gate_id_list',3,'p_gate_id_list_1','_qasmparser.py',381),
  ('bit_list -> id','bit_list',1,'p_bit_list_0','_qasmparser.py',393),
  ('bit_list -> bit_list , id','bit_list',3,'p_bit_list_1','_qasmparser.py',401),
  ('primary_list -> primary','primary_list',1,'p_primary_list_0','_qasmparser.py',414),
  ('primary_list -> primary_list , primary','primary_list',3,'p_primary_list_1','_qasmparser.py',420),
  ('decl -> qreg_decl ;','decl',2,'p_decl','_qasmparser.py',432),
  ('decl -> creg_decl ;','decl',2,'p_decl','_qasmparser.py',433),
  ('decl -> qreg_decl error','decl',2,'p_decl','_qasmparser.py',434),
  ('decl -> creg_decl error','decl',2,'p_decl','_qasmparser.py',435),
  ('decl -> gate_decl','decl',1,'p_decl','_qasmparser.py',436),
  ('qreg_decl -> QREG indexed_id','qreg_decl',2,'p_qreg_decl','_qasmparser.py',449),
  ('qreg_decl -> QREG error','qreg_decl',2,'p_qreg_decl_e','_qasmparser.py',461),
  ('creg_decl -> CREG indexed_id','creg_decl',2,'p_creg_decl','_qasmparser.py',471),
  ('creg_decl -> CREG error','creg_decl',2,'p_creg_decl_e','_qasmparser.py',483),
  ('gate_decl -> GATE id gate_scope bit_list gate_body','gate_decl',5,'p_gate_decl_0','_qasmparser.py',500),
  ('gate_decl -> GATE id gate_scope ( ) bit_list gate_body','gate_decl',7,'p_gate_decl_1','_qasmparser.py',511),
  ('gate_decl -> GATE id gate_scope ( gate_id_list ) bit_list gate_body','gate_decl',8,'p_gate_decl_2','_qasmparser.py',522),
  ('gate_scope -> <empty>','gate_scope',0,'p_gate_scope','_qasmparser.py',534),
  ('gate_body -> { }','gate_body',2,'p_gate_body_0','_qasmparser.py',550),
  ('gate_body -> { gate_op_list }','gate_body',3,'p_gate_body_1','_qasmparser.py',559),
  ('gate_op_list -> gate_op','gate_op_list',1,'p_gate_op_list_0','_qasmparser.py',572),
  ('gate_op_list -> gate_op_list gate_op','gate_op_list',2,'p_gate_op_list_1','_qasmparser.py',578),
  ('unitary_op -> U ( exp_list ) primary','unitary_op',5,'p_unitary_op_0','_qasmparser.py',598),
  ('unitary_op -> CX primary , primary','unitary_op',4,'p_unitary_op_1','_qasmparser.py',606),
  ('unitary_op -> id primary_list','unitary_op',2,'p_unitary_op_2','_qasmparser.py',617),
  ('unitary_op -> id ( ) primary_list','unitary_op',4,'p_unitary_op_3','_qasmparser.py',626),
  ('unitary_op -> id ( exp_list ) primary_list','unitary_op',5,'p_unitary_op_4','_qasmparser.py',635),
  ('gate_op -> U ( exp_list ) id ;','gate_op',6,'p_gate_op_0','_qasmparser.py',656),
  ('gate_op -> U ( exp_list ) error','gate_op',5,'p_gate_op_0e1','_qasmparser.py',664),
  ('gate_op -> U ( exp_list error','gate_op',4,'p_gate_op_0e2','_qasmparser.py',671),
  ('gate_op -> CX id , id ;','gate_op',5,'p_gate_op_1','_qasmparser.py',677),
  ('gate_op -> CX error','gate_op',2,'p_gate_op_1e1','_qasmparser.py',686),
  ('gate_op -> CX id , error','gate_op',4,'p_gate_op_1e2','_qasmparser.py',694),
  ('gate_op -> id id_list ;','gate_op',3,'p_gate_op_2','_qasmparser.py',702),
  ('gate_op -> id id_list error','gate_op',3,'p_gate_op_2e','_qasmparser.py',714),
  ('gate_op -> id ( ) id_list ;','gate_op',5,'p_gate_op_3','_qasmparser.py',720),
  ('gate_op -> id ( exp_list ) id_list ;','gate_op',6,'p_gate_op_4','_qasmparser.py',729),
  ('gate_op -> id ( ) error','gate_op',4,'p_gate_op_4e0','_qasmparser.py',739),
  ('gate_op -> id ( error','gate_op',3,'p_gate_op_4e1','_qasmparser.py',746),
  ('gate_op -> BARRIER id_list ;','gate_op',3,'p_gate_op_5','_qasmparser.py',753),
  ('gate_op -> BARRIER error','gate_op',2,'p_gate_op_5e','_qasmparser.py',761),
  ('opaque -> OPAQUE id gate_scope bit_list','opaque',4,'p_opaque_0','_qasmparser.py',774),
  ('opaque -> OPAQUE id gate_scope ( ) bit_list','opaque',6,'p_opaque_1','_qasmparser.py',786),
  ('opaque -> OPAQUE id gate_scope ( gate_id_list ) bit_list','opaque',7,'p_opaque_2','_qasmparser.py',794),
  ('opaque -> OPAQUE id gate_scope ( error','opaque',5,'p_opaque_1e','_qasmparser.py',805),
  ('measure -> MEASURE primary ASSIGN primary','measure',4,'p_measure','_qasmparser.py',814),
  ('measure -> MEASURE primary error','measure',3,'p_measure_e','_qasmparser.py',822),
  ('barrier -> BARRIER primary_list','barrier',2,'p_barrier','_qasmparser.py',834),
  ('reset -> RESET primary','reset',2,'p_reset','_qasmparser.py',845),
  ('if -> IF ( id MATCHES NNINTEGER ) quantum_op','if',7,'p_if','_qasmparser.py',855),
  ('if -> IF ( id error','if',4,'p_if','_qasmparser.py',856),
  ('if -> IF ( id MATCHES error','if',5,'p_if','_qasmparser.py',857),
  ('if -> IF ( id MATCHES NNINTEGER error','if',6,'p_if','_qasmparser.py',858),
  ('if -> IF error','if',2,'p_if','_qasmparser.py',859),
  ('quantum_op -> unitary_op','quantum_op',1,'p_quantum_op','_qasmparser.py',892),
  ('quantum_op -> opaque','quantum_op',1,'p_quantum_op','_qasmparser.py',893),
  ('quantum_op -> measure','quantum_op',1,'p_quantum_op','_qasmparser.py',894),
  ('quantum_op -> barrier','quantum_op',1,'p_quantum_op','_qasmparser.py',895),
  ('quantum_op -> reset','quantum_op',1,'p_quantum_op','_qasmparser.py',896),
  ('quantum_op -> if','quantum_op',1,'p_quantum_op','_qasmparser.py',897),
  ('unary -> NNINTEGER','unary',1,'p_unary_0','_qasmparser.py',913),
  ('unary -> REAL','unary',1,'p_unary_1','_qasmparser.py',919),
  ('unary -> PI','unary',1,'p_unary_2','_qasmparser.py',925),
  ('unary -> id','unary',1,'p_unary_3','_qasmparser.py',931),
  ('unary -> ( expression )','unary',3,'p_unary_4','_qasmparser.py',937),
  ('unary -> id ( expression )','unary',4,'p_unary_6','_qasmparser.py',943),
  ('prefix_expression -> unary','prefix_expression',1,'p_prefix_expression_0','_qasmparser.py',956),
  ('prefix_expression -> + prefix_expression','prefix_expression',2,'p_prefix_expression_1','_qasmparser.py',962),
  ('prefix_expression -> - prefix_expression','prefix_expression',2,'p_prefix_expression_1','_qasmparser.py',963),
  ('additive_expression -> prefix_expression','additive_expression',1,'p_additive_expression_0','_qasmparser.py',969),
  ('additive_expression -> additive_expression + prefix_expression','additive_expression',3,'p_additive_expression_1','_qasmparser.py',975),
  ('additive_expression -> additive_expression - prefix_expression','additive_expression',3,'p_additive_expression_1','_qasmparser.py',976),
  ('multiplicative_expression -> additive_expression','multiplicative_expression',1,'p_multiplicative_expression_0','_qasmparser.py',982),
  ('multiplicative_expression -> multiplicative_expression * additive_expression','multiplicative_expression',3,'p_multiplicative_expression_1','_qasmparser.py',988),
  ('multiplicative_expression -> multiplicative_expression / additive_expression','multiplicative_expression',3,'p_multiplicative_expression_1','_qasmparser.py',989),
  ('expression -> multiplicative_expression','expression',1,'p_expression_0','_qasmparser.py',995),
  ('expression -> expression ^ multiplicative_expression','expression',3,'p_expression_1','_qasmparser.py',1001),
  ('exp_list -> expression','exp_list',1,'p_exp_list_0','_qasmparser.py',1011),
  ('exp_list -> exp_list , expression','exp_list',3,'p_exp_list_1','_qasmparser.py',1017),
  ('ignore -> STRING','ignore',1,'p_ignore','_qasmparser.py',1024),
]
